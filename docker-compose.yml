version: '3.8'

services:
  postgres:
    image: postgres:13-trixie
    container_name: anomi-postgres
    environment:
      POSTGRES_DB: anomi
      POSTGRES_USER: guest
      POSTGRES_PASSWORD: guest
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - anomi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U guest -d anomi"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: anomi-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - anomi-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # # Optional: Redis for caching (if needed later)
  # redis:
  #   image: redis:7-alpine
  #   container_name: anomi-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - anomi-network
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local
  # redis_data:
  #   driver: local

networks:
  anomi-network:
    driver: bridge
